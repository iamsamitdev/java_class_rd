package main.com.itgenius.hibernate;

import java.util.List;

import org.hibernate.Session;
import org.hibernate.Transaction;

import main.com.itgenius.entity.Product;

public class App {

	public static void main(String[] args) {
		 	Product product = new Product("Ramesh", "Fadatare", "rameshfadatare@javaguides.com");
		 	Product product1 = new Student("John", "Cena", "john@javaguides.com");
	        Transaction transaction = null;
	        try (Session session = HibernateUtil.getSessionFactory().openSession()) {
	            // start a transaction
	            transaction = session.beginTransaction();
	            // save the student objects
	            session.save(product);
	            session.save(product1);
	            // commit transaction
	            transaction.commit();
	        } catch (Exception e) {
	            if (transaction != null) {
	                transaction.rollback();
	            }
	            e.printStackTrace();
	        }

	        try (Session session = HibernateUtil.getSessionFactory().openSession()) {
	            List < Student > students = session.createQuery("from Student", Student.class).list();
	            students.forEach(s - > System.out.println(s.getFirstName()));
	        } catch (Exception e) {
	            if (transaction != null) {
	                transaction.rollback();
	            }
	            e.printStackTrace();
	        }

	}

}
